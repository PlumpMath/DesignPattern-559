还是行为模式的一种，适用场景是：
在面向对象的程序设计中，想要让一个对象调用另一个对象，最原始的做法是：
①当前类中持有被调用对象
②在当前类中设置要传入的参数
③调用方法

如果不能实现简单的new出对象――调用方法(比如对参数进行复杂处理)，或者多处调用这个对象(比如有的地方需要写日志和缓存)，那么最好使用命令模式
角色和职责：
①Command：命令抽象，需要持有被调用的对象，还要有一个调用的方法，子类继承直接在重写方法中拿到所持有的对象
②ConcreteCommand：Command的实现类，针对被调用的对象，重写调用方法
③Receiver：被调用的对象
④Invoker：使用命令的地方，持有Command的对象，也能持有Command对象的集合――不直接调用对象，调命令(可以把处理参数的复杂逻辑封装起来)，命令调对象(可以有多个命令，从而在不同的地方调用)